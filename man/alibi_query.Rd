% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alibi_query.R
\name{alibi_query}
\alias{alibi_query}
\title{alibi_query}
\usage{
alibi_query(STP_track1, STP_track2, stop_if_true = TRUE, return_PIA = FALSE,
  time_interval = 5)
}
\arguments{
\item{STP_track1}{STP_track1}

\item{STP_track2}{STP_track2}

\item{stop_if_true}{logigal:Stop if intersection is found. Default=TRUE}

\item{return_PIA}{logigal:Return potential meeting time and Potential Intersection Area(PIA). Default=FALSE}

\item{time_interval}{Accuracy in seconds of Potential Intersection Area(PIA) and time period that individuals could have been at the same location.
Default is 5 seconds, meaning that time period and PIA are based on PPAs calculated for every 5 seconds.}
}
\value{
If an intersection is found, the method returns a vector with space-time point of intersecting STPs.
If return_PIA is True, the method returns the Potential Intersection Area(PIA) and the time period that the individuals could have been at the same location.
If no intersection is found, the methods returns FALSE.
}
\description{
This function tests wether there was a possible meeting between two individuals or other moving objects.
If the individuals of two trajecories could have met, is tested by applying the alibi query to segments that overlap in time.
The alibi query is a Boolean query that checks whether two moving individuals,
that are given by two samples of space-time points and speed limitations, could have met each other.
The query tests if two space-time prisms intersect.
Kuijpers et al. (2011) provide the analytical solution for the alibi query that is used by this function.
As a result of an error in the R implementation of the alibi query, the method occasionally returns false positives.
This error is filtered out if return_PIA=TRUE.
}
\examples{
library(spacetime)
library(sp)

## create 2 STP_tracks
# time
t1 <- strptime("01/01/2017 00:00:00", "\%m/\%d/\%Y \%H:\%M:\%S")
t2 <- t1+5*60*60 # 5 hours after t1
time1<-seq(t1,t2,30*60)
time2<-time1+0.25*60*60
# spatial coordinates
x1=c(seq(0,25,5),seq(27.5,37.5,2.5))
y1=sample(-2:2, 11,replace = TRUE)
x2=c(seq(0,25,5),seq(27.5,37.5,2.5))
y2=sample(-2:2, 11,replace = TRUE)

n = length(x1)
crs_NL = CRS("+init=epsg:28992")

# create class STIDF
stidf1 = STIDF(SpatialPoints(cbind(x1,y1),crs_NL), time1, data.frame(co2 = rnorm(n),O2=rnorm(n)))
stidf2 = STIDF(SpatialPoints(cbind(x2,y2),crs_NL), time2, data.frame(co2 = rnorm(n),O2=rnorm(n)))

# Track-class {trajectories}
my_track1<-Track(stidf1)
my_track2<-Track(stidf2)
# set maximum speed
v1<-getVmaxtrack(my_track1)+0.00015
v2<-getVmaxtrack(my_track2)+0.00030
# STP_track class
STP_track1<-STP_Track(my_track1,v1)
STP_track2<-STP_Track(my_track2,v2)

## the alibi query
alibi_query(STP_track1,STP_track2) # now only finds first intersection
}
\references{
- 	Kuijpers, B., Grimson, R., & Othman, W. (2011).
An analytic solution to the alibi query in the space-time prisms model for moving object data.
International Journal of Geographical Information Science, 25(2), 293-322.
}
\author{
Mark ten Vregelaar
}
